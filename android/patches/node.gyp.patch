diff --git a/node.gyp b/node.gyp
index 865a7de931..c1342808fe 100644
--- a/node.gyp
+++ b/node.gyp
@@ -1305,169 +1305,169 @@
         }],
       ],
     }, # fuzz_env
-    {
-      'target_name': 'cctest',
-      'type': 'executable',
+    # {
+    #   'target_name': 'cctest',
+    #   'type': 'executable',
 
-      'dependencies': [
-        '<(node_lib_target_name)',
-        'deps/histogram/histogram.gyp:histogram',
-        'deps/uvwasi/uvwasi.gyp:uvwasi',
-        'node_dtrace_header',
-        'node_dtrace_ustack',
-        'node_dtrace_provider',
-      ],
+    #   'dependencies': [
+    #     '<(node_lib_target_name)',
+    #     'deps/histogram/histogram.gyp:histogram',
+    #     'deps/uvwasi/uvwasi.gyp:uvwasi',
+    #     'node_dtrace_header',
+    #     'node_dtrace_ustack',
+    #     'node_dtrace_provider',
+    #   ],
 
-      'includes': [
-        'node.gypi'
-      ],
+    #   'includes': [
+    #     'node.gypi'
+    #   ],
 
-      'include_dirs': [
-        'src',
-        'tools/msvs/genfiles',
-        'deps/v8/include',
-        'deps/cares/include',
-        'deps/uv/include',
-        'deps/uvwasi/include',
-        'test/cctest',
-      ],
+    #   'include_dirs': [
+    #     'src',
+    #     'tools/msvs/genfiles',
+    #     'deps/v8/include',
+    #     'deps/cares/include',
+    #     'deps/uv/include',
+    #     'deps/uvwasi/include',
+    #     'test/cctest',
+    #   ],
 
-      'defines': [
-        'NODE_ARCH="<(target_arch)"',
-        'NODE_PLATFORM="<(OS)"',
-        'NODE_WANT_INTERNALS=1',
-      ],
+    #   'defines': [
+    #     'NODE_ARCH="<(target_arch)"',
+    #     'NODE_PLATFORM="<(OS)"',
+    #     'NODE_WANT_INTERNALS=1',
+    #   ],
 
-      'sources': [
-        'src/node_snapshot_stub.cc',
-        'src/node_code_cache_stub.cc',
-        'test/cctest/gtest/gtest-all.cc',
-        'test/cctest/gtest/gtest_main.cc',
-        'test/cctest/node_test_fixture.cc',
-        'test/cctest/node_test_fixture.h',
-        'test/cctest/test_aliased_buffer.cc',
-        'test/cctest/test_base64.cc',
-        'test/cctest/test_base_object_ptr.cc',
-        'test/cctest/test_node_postmortem_metadata.cc',
-        'test/cctest/test_environment.cc',
-        'test/cctest/test_linked_binding.cc',
-        'test/cctest/test_per_process.cc',
-        'test/cctest/test_platform.cc',
-        'test/cctest/test_json_utils.cc',
-        'test/cctest/test_sockaddr.cc',
-        'test/cctest/test_traced_value.cc',
-        'test/cctest/test_util.cc',
-        'test/cctest/test_url.cc',
-      ],
+    #   'sources': [
+    #     'src/node_snapshot_stub.cc',
+    #     'src/node_code_cache_stub.cc',
+    #     'test/cctest/gtest/gtest-all.cc',
+    #     'test/cctest/gtest/gtest_main.cc',
+    #     'test/cctest/node_test_fixture.cc',
+    #     'test/cctest/node_test_fixture.h',
+    #     'test/cctest/test_aliased_buffer.cc',
+    #     'test/cctest/test_base64.cc',
+    #     'test/cctest/test_base_object_ptr.cc',
+    #     'test/cctest/test_node_postmortem_metadata.cc',
+    #     'test/cctest/test_environment.cc',
+    #     'test/cctest/test_linked_binding.cc',
+    #     'test/cctest/test_per_process.cc',
+    #     'test/cctest/test_platform.cc',
+    #     'test/cctest/test_json_utils.cc',
+    #     'test/cctest/test_sockaddr.cc',
+    #     'test/cctest/test_traced_value.cc',
+    #     'test/cctest/test_util.cc',
+    #     'test/cctest/test_url.cc',
+    #   ],
 
-      'conditions': [
-        [ 'node_use_openssl=="true"', {
-          'defines': [
-            'HAVE_OPENSSL=1',
-          ],
-          'sources': [
-            'test/cctest/test_node_crypto.cc',
-          ]
-        }],
-        [ 'node_use_openssl=="true" and experimental_quic==1', {
-          'defines': [
-            'NODE_EXPERIMENTAL_QUIC=1',
-          ],
-          'sources': [
-            'test/cctest/test_quic_buffer.cc',
-            'test/cctest/test_quic_cid.cc'
-          ]
-        }],
-        ['v8_enable_inspector==1', {
-          'sources': [
-            'test/cctest/test_inspector_socket.cc',
-            'test/cctest/test_inspector_socket_server.cc'
-          ],
-          'defines': [
-            'HAVE_INSPECTOR=1',
-          ],
-        }, {
-           'defines': [
-             'HAVE_INSPECTOR=0',
-           ]
-        }],
-        ['OS=="solaris"', {
-          'ldflags': [ '-I<(SHARED_INTERMEDIATE_DIR)' ]
-        }],
-        # Skip cctest while building shared lib node for Windows
-        [ 'OS=="win" and node_shared=="true"', {
-          'type': 'none',
-        }],
-        [ 'node_shared=="true"', {
-          'xcode_settings': {
-            'OTHER_LDFLAGS': [ '-Wl,-rpath,@loader_path', ],
-          },
-        }],
-        ['OS=="win"', {
-          'libraries': [
-            'Dbghelp.lib',
-            'winmm.lib',
-            'Ws2_32.lib',
-          ],
-        }],
-      ],
-    }, # cctest
+    #   'conditions': [
+    #     [ 'node_use_openssl=="true"', {
+    #       'defines': [
+    #         'HAVE_OPENSSL=1',
+    #       ],
+    #       'sources': [
+    #         'test/cctest/test_node_crypto.cc',
+    #       ]
+    #     }],
+    #     [ 'node_use_openssl=="true" and experimental_quic==1', {
+    #       'defines': [
+    #         'NODE_EXPERIMENTAL_QUIC=1',
+    #       ],
+    #       'sources': [
+    #         'test/cctest/test_quic_buffer.cc',
+    #         'test/cctest/test_quic_cid.cc'
+    #       ]
+    #     }],
+    #     ['v8_enable_inspector==1', {
+    #       'sources': [
+    #         'test/cctest/test_inspector_socket.cc',
+    #         'test/cctest/test_inspector_socket_server.cc'
+    #       ],
+    #       'defines': [
+    #         'HAVE_INSPECTOR=1',
+    #       ],
+    #     }, {
+    #        'defines': [
+    #          'HAVE_INSPECTOR=0',
+    #        ]
+    #     }],
+    #     ['OS=="solaris"', {
+    #       'ldflags': [ '-I<(SHARED_INTERMEDIATE_DIR)' ]
+    #     }],
+    #     # Skip cctest while building shared lib node for Windows
+    #     [ 'OS=="win" and node_shared=="true"', {
+    #       'type': 'none',
+    #     }],
+    #     [ 'node_shared=="true"', {
+    #       'xcode_settings': {
+    #         'OTHER_LDFLAGS': [ '-Wl,-rpath,@loader_path', ],
+    #       },
+    #     }],
+    #     ['OS=="win"', {
+    #       'libraries': [
+    #         'Dbghelp.lib',
+    #         'winmm.lib',
+    #         'Ws2_32.lib',
+    #       ],
+    #     }],
+    #   ],
+    # }, # cctest
 
-    {
-      'target_name': 'embedtest',
-      'type': 'executable',
+    # {
+    #   'target_name': 'embedtest',
+    #   'type': 'executable',
 
-      'dependencies': [
-        '<(node_lib_target_name)',
-        'deps/histogram/histogram.gyp:histogram',
-        'deps/uvwasi/uvwasi.gyp:uvwasi',
-        'node_dtrace_header',
-        'node_dtrace_ustack',
-        'node_dtrace_provider',
-      ],
+    #   'dependencies': [
+    #     '<(node_lib_target_name)',
+    #     'deps/histogram/histogram.gyp:histogram',
+    #     'deps/uvwasi/uvwasi.gyp:uvwasi',
+    #     'node_dtrace_header',
+    #     'node_dtrace_ustack',
+    #     'node_dtrace_provider',
+    #   ],
 
-      'includes': [
-        'node.gypi'
-      ],
+    #   'includes': [
+    #     'node.gypi'
+    #   ],
 
-      'include_dirs': [
-        'src',
-        'tools/msvs/genfiles',
-        'deps/v8/include',
-        'deps/cares/include',
-        'deps/uv/include',
-        'deps/uvwasi/include',
-        'test/embedding',
-      ],
+    #   'include_dirs': [
+    #     'src',
+    #     'tools/msvs/genfiles',
+    #     'deps/v8/include',
+    #     'deps/cares/include',
+    #     'deps/uv/include',
+    #     'deps/uvwasi/include',
+    #     'test/embedding',
+    #   ],
 
-      'sources': [
-        'src/node_snapshot_stub.cc',
-        'src/node_code_cache_stub.cc',
-        'test/embedding/embedtest.cc',
-      ],
+    #   'sources': [
+    #     'src/node_snapshot_stub.cc',
+    #     'src/node_code_cache_stub.cc',
+    #     'test/embedding/embedtest.cc',
+    #   ],
 
-      'conditions': [
-        ['OS=="solaris"', {
-          'ldflags': [ '-I<(SHARED_INTERMEDIATE_DIR)' ]
-        }],
-        # Skip cctest while building shared lib node for Windows
-        [ 'OS=="win" and node_shared=="true"', {
-          'type': 'none',
-        }],
-        [ 'node_shared=="true"', {
-          'xcode_settings': {
-            'OTHER_LDFLAGS': [ '-Wl,-rpath,@loader_path', ],
-          },
-        }],
-        ['OS=="win"', {
-          'libraries': [
-            'Dbghelp.lib',
-            'winmm.lib',
-            'Ws2_32.lib',
-          ],
-        }],
-      ],
-    }, # embedtest
+    #   'conditions': [
+    #     ['OS=="solaris"', {
+    #       'ldflags': [ '-I<(SHARED_INTERMEDIATE_DIR)' ]
+    #     }],
+    #     # Skip cctest while building shared lib node for Windows
+    #     [ 'OS=="win" and node_shared=="true"', {
+    #       'type': 'none',
+    #     }],
+    #     [ 'node_shared=="true"', {
+    #       'xcode_settings': {
+    #         'OTHER_LDFLAGS': [ '-Wl,-rpath,@loader_path', ],
+    #       },
+    #     }],
+    #     ['OS=="win"', {
+    #       'libraries': [
+    #         'Dbghelp.lib',
+    #         'winmm.lib',
+    #         'Ws2_32.lib',
+    #       ],
+    #     }],
+    #   ],
+    # }, # embedtest
 
     # TODO(joyeecheung): do not depend on node_lib,
     # instead create a smaller static library node_lib_base that does
